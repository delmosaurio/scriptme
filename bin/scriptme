#!/usr/bin/env node

/*!
 * Scriptme
 * Copyright(c) 2012-2013 Delmo Carrozzo <dcardev@gmail.com>
 * MIT Licensed
 */

 /**
  * Module dependencies.
  */
var fs = require('fs')
  , scriptme = require('../lib/scriptme');


var program = require('commander');

program
  .version(scriptme.version)
  .usage('-i "path/from/template" -o "path/to/template" [options]')
  .option('-i, --input <file>', 'input template file')
  .option('-o, --output <file>', 'output rendered file')
  .option('-d, --data <file>', 'json data file')
  .option('-f, --force', 'Json data file')
  .parse(process.argv);


if (program.input === undefined || program.output === undefined) {
  abort('  scriptme needs an input file and an output file to work!');
}

var context = {};

// exists the input file?
if ( !fs.existsSync(program.input) ){
  abort('the input file doesn\'t exists');
}

// get the the json data file
if (program.data !== undefined && program.data.length) {
  if ( fs.existsSync(program.data) ){
    context = JSON.parse( fs.readFileSync(program.data) );
  } else {
      console.warn('the data file doesn\'t exists');
  }
}

var callback = function(err, response) {

    if (err) { abort(err); }
    console.log('the template was created at', program.output);
    
};

fs.exists(program.output, function(exists){

  if (!exists || program.force) {
    render(program.input, program.output, context, callback);
  } else {
    
    confirm('output file is not empty, continue? ', function(ok){
     process.stdin.destroy();
     render(program.input, program.output, context, callback);
    });
    
  }

});

/**
 * Prompt confirmation with the given `msg`.
 *
 * @param {String} msg
 * @param {Function} fn
 */

function confirm(msg, fn) {
  prompt(msg, function(val){
    fn(/^ *y(es)?/i.test(val));
  });
}

/**
 * Prompt input with the given `msg` and callback `fn`.
 *
 * @param {String} msg
 * @param {Function} fn
 */

function prompt(msg, fn) {
  // prompt
  if (' ' == msg[msg.length - 1]) {
    process.stdout.write(msg);
  } else {
    console.log(msg);
  }

  // stdin
  process.stdin.setEncoding('ascii');
  process.stdin.once('data', function(data){
    fn(data);
  }).resume();
}

/**
 * Render the template without checks
 * 
 * @param {String} input
 * @param {String} output
 * @param {Object} context
 * @param {Function} fn
  */
function render(input, output, context, fn) {
  
  var template = fs.readFileSync(input, 'utf8');
  var writer = fs.createWriteStream(program.output);

  scriptme.render(template, writer, context, fn);
}

/**
 * Exit with the given arguments.
 *
 */
function abort() {
  console.log.apply(null, arguments);
  program.help();
  process.exit(1);
}